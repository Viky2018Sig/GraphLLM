{
    "last_node_id": 28,
    "last_link_id": 46,
    "nodes": [
        {
            "id": 17,
            "type": "llm/input",
            "pos": [
                80,
                80
            ],
            "size": {
                "0": 210,
                "1": 88
            },
            "flags": {},
            "order": 0,
            "mode": 0,
            "outputs": [
                {
                    "name": "out",
                    "type": "string",
                    "links": [
                        21
                    ],
                    "slot_index": 0
                }
            ],
            "properties": {
                "parameters": "solve 2+2"
            }
        },
        {
            "id": 22,
            "type": "llm/watch",
            "pos": [
                985,
                670
            ],
            "size": {
                "0": 875.2201538085938,
                "1": 225.28363037109375
            },
            "flags": {},
            "order": 8,
            "mode": 0,
            "inputs": [
                {
                    "name": "in",
                    "type": "string",
                    "link": 31,
                    "slot_index": 0
                }
            ],
            "properties": {}
        },
        {
            "id": 19,
            "type": "llm/generic_node",
            "pos": [
                497,
                646
            ],
            "size": {
                "0": 210,
                "1": 108
            },
            "flags": {},
            "order": 6,
            "mode": 0,
            "inputs": [
                {
                    "name": "in",
                    "type": "string",
                    "link": 45,
                    "slot_index": 0
                },
                {
                    "name": "N",
                    "type": "string",
                    "link": null
                }
            ],
            "outputs": [
                {
                    "name": "out",
                    "type": "string",
                    "links": [
                        31,
                        46
                    ],
                    "slot_index": 0
                },
                {
                    "name": "N",
                    "type": "string",
                    "links": null
                }
            ],
            "properties": {
                "parameters": "    type: stateless\n#    deps: {\"client\":CLIENT}\n    init: \n        - templates/agent_xml_reflexion.txt\n        - |-\n            # rules for the agent\n            1. The last action can only use information that has been previously produced in a <result> tag or information given in the user's question. The AI agent is non allowed to use its own knowledge to fill the arguments of the action unless this is the first action.\n            2. The last action must be aligned with the goal. Useless actions are to be considered invalid.\n            3. The model should not attempt to generate a summary if the goal is to extract a URL. Generating a summary removes all metadata ad URL addresses from a web page.\n            4. When using the web_search() tool, the returned URL should not depend on updated information from a dynamically generated website.\n    conf: {\"stop\":\"```\",\"force_system\":True,\"temperature\":0.1, \"top_k\":40, \"n_predict\":512,\"print_prompt\":0, \"print_response\":\"partial\"}"
            }
        },
        {
            "id": 26,
            "type": "llm/virtual_source",
            "pos": [
                96,
                627
            ],
            "size": {
                "0": 210,
                "1": 58
            },
            "flags": {
                "collapsed": false
            },
            "order": 3,
            "mode": 0,
            "outputs": [
                {
                    "name": "out",
                    "type": "string",
                    "links": [
                        45
                    ],
                    "slot_index": 0
                }
            ],
            "properties": {
                "identifier": "reflexion"
            }
        },
        {
            "id": 23,
            "type": "llm/virtual_sink",
            "pos": [
                857,
                201
            ],
            "size": {
                "0": 210,
                "1": 58
            },
            "flags": {
                "collapsed": true
            },
            "order": 11,
            "mode": 0,
            "inputs": [
                {
                    "name": "in",
                    "type": "string",
                    "link": 38,
                    "slot_index": 0
                }
            ],
            "properties": {
                "identifier": "llm"
            }
        },
        {
            "id": 27,
            "type": "llm/virtual_sink",
            "pos": [
                985,
                222
            ],
            "size": {
                "0": 210,
                "1": 58
            },
            "flags": {
                "collapsed": true
            },
            "order": 12,
            "mode": 0,
            "inputs": [
                {
                    "name": "in",
                    "type": "string",
                    "link": 41
                }
            ],
            "properties": {
                "identifier": "tool"
            }
        },
        {
            "id": 25,
            "type": "llm/virtual_sink",
            "pos": [
                854,
                242
            ],
            "size": {
                "0": 210,
                "1": 58
            },
            "flags": {
                "collapsed": true
            },
            "order": 13,
            "mode": 0,
            "inputs": [
                {
                    "name": "in",
                    "type": "string",
                    "link": 44,
                    "slot_index": 0
                }
            ],
            "properties": {
                "identifier": "reflexion"
            }
        },
        {
            "id": 18,
            "type": "llm/watch",
            "pos": [
                1130,
                154
            ],
            "size": {
                "0": 210,
                "1": 88
            },
            "flags": {},
            "order": 10,
            "mode": 0,
            "inputs": [
                {
                    "name": "in",
                    "type": "string",
                    "link": 22
                }
            ],
            "properties": {}
        },
        {
            "id": 24,
            "type": "llm/virtual_source",
            "pos": [
                109,
                214
            ],
            "size": {
                "0": 210,
                "1": 58
            },
            "flags": {
                "collapsed": true
            },
            "order": 1,
            "mode": 0,
            "outputs": [
                {
                    "name": "out",
                    "type": "string",
                    "links": [
                        39
                    ],
                    "slot_index": 0
                }
            ],
            "properties": {
                "identifier": "llm"
            }
        },
        {
            "id": 14,
            "type": "llm/generic_node",
            "pos": [
                302,
                229
            ],
            "size": {
                "0": 210,
                "1": 108
            },
            "flags": {
                "collapsed": true
            },
            "order": 4,
            "mode": 0,
            "inputs": [
                {
                    "name": "in",
                    "type": "string",
                    "link": 39
                },
                {
                    "name": "N",
                    "type": "string",
                    "link": null
                }
            ],
            "outputs": [
                {
                    "name": "out",
                    "type": "string",
                    "links": [
                        29,
                        40
                    ],
                    "slot_index": 0
                },
                {
                    "name": "N",
                    "type": "string",
                    "links": null
                }
            ],
            "properties": {
                "parameters": "    type: stateless \n    conf: {\"grammar\": \"grammars/react_xml_pure.txt\",\"stop\":\"<result>\",\"force_system\":True,\"temperature\":0.001, \"top_k\":1, \"n_predict\":1024,\"print_prompt\":1, \"print_response\":\"partial\"}"
            }
        },
        {
            "id": 16,
            "type": "llm/generic_node",
            "pos": [
                538,
                176
            ],
            "size": {
                "0": 210,
                "1": 168
            },
            "flags": {},
            "order": 9,
            "mode": 0,
            "inputs": [
                {
                    "name": "in",
                    "type": "string",
                    "link": 21
                },
                {
                    "name": "N",
                    "type": "string",
                    "link": 40
                },
                {
                    "name": "N",
                    "type": "string",
                    "link": 43
                },
                {
                    "name": "N",
                    "type": "string",
                    "link": 46
                },
                {
                    "name": "N",
                    "type": "string",
                    "link": null
                }
            ],
            "outputs": [
                {
                    "name": "out",
                    "type": "string",
                    "links": [
                        22
                    ],
                    "slot_index": 0
                },
                {
                    "name": "N",
                    "type": "string",
                    "links": [
                        38
                    ],
                    "slot_index": 1
                },
                {
                    "name": "N",
                    "type": "string",
                    "links": [
                        41
                    ],
                    "slot_index": 2
                },
                {
                    "name": "N",
                    "type": "string",
                    "links": [
                        44
                    ],
                    "slot_index": 3
                },
                {
                    "name": "N",
                    "type": "string",
                    "links": null
                }
            ],
            "properties": {
                "parameters": "    type: agent\n    init: \n        - |-\n            {p:bos}\n\n            {p:system}\n            You are a AI task scheduler. Your job is to call the provided tools in the correct sequence to generate the answer for the user question.\n\n            ## Tools\n            {p:tools}\n\n            ## Objective\n            \n            1. First elaborate a detailed plan on how to complete the user request by using the provided tools.\n            Use the following template to describe your plan:\n            ```\n            <planning> A detailed description of your plan </planning>\n            ```\n            \n            2. Then use the following template to process the user request step by step:\n            ```\n            <thinking> Your thoughts about what to do next </thinking>\n            <action> The action to perform and its parameters. The specific format is described later. </action>\n            <result> The result of the action </result>\n            <evaluation> Evaluate if the tool provided all the information you need. Decide if you should call the tool again with a refined input </evaluation>\n            ```\n            \n            format of the action field:\n            - The action field is enclosed between <action> and </action> tags.\n            - The name of the action is inserted between <action_name> and </action_name> tags.\n            - Each optional parameters must be enclosed between <action_parameter> and </action_parameter> tags.\n            - Only the value of the parameter is specified. The name of the parameter is omitted.\n            - The parameters can be multiline strings\n            - Example: <action><action_name>eval</action_name><action_parameter>2+3</action_parameter></action>\n\n            3. Keep repeating the previous template until you have the answer.\n\n            ## Rules\n            - If a task cannot be directly executed, use the provided tools to execute the task in a indirect way\n            - The input to query_file() should be a very detailed question about what you want from the external agent.\n            - Use only information obtained from executing the provided tools, ignoring all your previous knowledge\n            - Use query_file() as a substitute for a web scraping tool\n            {p:hints}{p:eom}\n\n            {p:user}\n            Question: {}{p:eom}\n\n            {p:assistant}\n            <planning>\n    conf: \n        subtype: reflexion\n        tokens: [\"<evaluation>\",\"<action>\",\"\",\"<result>\"]\n        hints: |-\n                  - prefer returning the answer via answer_file() instead of answer()"
            }
        },
        {
            "id": 20,
            "type": "llm/watch",
            "pos": [
                708,
                425
            ],
            "size": {
                "0": 863.5791015625,
                "1": 133.51773071289062
            },
            "flags": {},
            "order": 7,
            "mode": 0,
            "inputs": [
                {
                    "name": "in",
                    "type": "string",
                    "link": 29,
                    "slot_index": 0
                }
            ],
            "properties": {}
        },
        {
            "id": 15,
            "type": "llm/generic_node",
            "pos": [
                190,
                271
            ],
            "size": {
                "0": 210,
                "1": 108
            },
            "flags": {},
            "order": 5,
            "mode": 0,
            "inputs": [
                {
                    "name": "in",
                    "type": "string",
                    "link": 42,
                    "slot_index": 0
                },
                {
                    "name": "N",
                    "type": "string",
                    "link": null
                }
            ],
            "outputs": [
                {
                    "name": "out",
                    "type": "string",
                    "links": [
                        43
                    ],
                    "slot_index": 0
                },
                {
                    "name": "N",
                    "type": "string",
                    "links": null
                }
            ],
            "properties": {
                "parameters": "    type: tool\n    conf: \n        tools: [Filesystem, LLM, Util, Web]"
            }
        },
        {
            "id": 28,
            "type": "llm/virtual_source",
            "pos": [
                10,
                318
            ],
            "size": {
                "0": 210,
                "1": 58
            },
            "flags": {
                "collapsed": false
            },
            "order": 2,
            "mode": 0,
            "outputs": [
                {
                    "name": "out",
                    "type": "string",
                    "links": [
                        42
                    ],
                    "slot_index": 0
                }
            ],
            "properties": {
                "identifier": "tool"
            }
        }
    ],
    "links": [
        [
            21,
            17,
            0,
            16,
            0,
            "string"
        ],
        [
            22,
            16,
            0,
            18,
            0,
            "string"
        ],
        [
            29,
            14,
            0,
            20,
            0,
            "string"
        ],
        [
            31,
            19,
            0,
            22,
            0,
            "string"
        ],
        [
            38,
            16,
            1,
            23,
            0,
            "string"
        ],
        [
            39,
            24,
            0,
            14,
            0,
            "string"
        ],
        [
            40,
            14,
            0,
            16,
            1,
            "string"
        ],
        [
            41,
            16,
            2,
            27,
            0,
            "string"
        ],
        [
            42,
            28,
            0,
            15,
            0,
            "string"
        ],
        [
            43,
            15,
            0,
            16,
            2,
            "string"
        ],
        [
            44,
            16,
            3,
            25,
            0,
            "string"
        ],
        [
            45,
            26,
            0,
            19,
            0,
            "string"
        ],
        [
            46,
            19,
            0,
            16,
            3,
            "string"
        ]
    ],
    "groups": [],
    "config": {},
    "extra": {},
    "version": 0.4
}